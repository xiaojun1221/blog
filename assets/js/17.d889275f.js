(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{532:function(t,a,e){"use strict";e.r(a);var n=e(3),s=Object(n.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),e("p",[t._v("上一章，已经学习了虚拟机与 GitLab 搭建，同时也熟悉了部分 Linux 的操作命令。")]),t._v(" "),e("p",[t._v("本章将介绍项目开发中所需要工具、环境的配置：")]),t._v(" "),e("ol",[e("li",[t._v("MySQL -数据库")]),t._v(" "),e("li",[t._v("PostMan - 接口测试工具")]),t._v(" "),e("li",[t._v("Egg - Node 开发框架")]),t._v(" "),e("li",[t._v("Jenkins - 构建工具")]),t._v(" "),e("li",[t._v("Nginx - 静态服务器")])]),t._v(" "),e("p",[t._v("下文会详细介绍上述工具的配置与使用方法。")]),t._v(" "),e("h2",{attrs:{id:"开发环境配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#开发环境配置"}},[t._v("#")]),t._v(" 开发环境配置")]),t._v(" "),e("h3",{attrs:{id:"mysql"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mysql"}},[t._v("#")]),t._v(" MySQL")]),t._v(" "),e("h4",{attrs:{id:"安装-mysql"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装-mysql"}},[t._v("#")]),t._v(" 安装 MySQL")]),t._v(" "),e("p",[t._v("数据库使用常规的 Mysql，具体安装详情可见 "),e("a",{attrs:{href:"https://www.jianshu.com/p/647a596cb251",target:"_blank",rel:"noopener noreferrer"}},[t._v("Mysql 安装教程"),e("OutboundLink")],1),t._v("。")]),t._v(" "),e("p",[t._v("针对 windows 的安装是非常简单的，点击"),e("a",{attrs:{href:"https://dev.mysql.com/downloads/mysql/",target:"_blank",rel:"noopener noreferrer"}},[t._v("下载社区版"),e("OutboundLink")],1),t._v("，选择 msi 版本，直接一路 next 选择即可，主要注意"),e("strong",[t._v("设置的 root 用户密码")]),t._v("一定不要忘记。（重置密码有点麻烦，每个 MySQL 的版本重置命令可能都不一样，如果忘了也不知道怎么解决的话，可以留言。）")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3b2b365b26bc41938c4bcbae4d49d188~tplv-k3u1fbpfcp-watermark.image",alt:'"b7a5dfd508c0a0e8642129e842bff2c.png"'}})]),t._v(" "),e("h4",{attrs:{id:"配置-mysql-环境变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置-mysql-环境变量"}},[t._v("#")]),t._v(" 配置 MySQL 环境变量")]),t._v(" "),e("p",[t._v("如果对于 sql 有经验的同学，可能会习惯用 sql 去建表、查询等。对于没有 sql 经验的同学来说，一般也不会直接去操作 MySQL，可以直接忽略，毕竟学习成本也不低，有兴趣的同学可以尝试一下。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cababc0dc01744aa8f75addaf70b51a0~tplv-k3u1fbpfcp-watermark.image",alt:'"image.png"'}})]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4ba450d4d6154883b176cff3e6acf49a~tplv-k3u1fbpfcp-watermark.image",alt:'"image.png"'}})]),t._v(" "),e("p",[t._v("配置完成之后，终端输入 "),e("code",[t._v("mysql -u root -p")]),t._v("，密码是之前安装 MySQL 设置的，出现如下图所示，即代表配置环境变量成功")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8c5be8ffcfb34b0d99dad4326c6ad245~tplv-k3u1fbpfcp-watermark.image",alt:'"image.png"'}})]),t._v(" "),e("h4",{attrs:{id:"navicat-for-mysql"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#navicat-for-mysql"}},[t._v("#")]),t._v(" Navicat for MySQL")]),t._v(" "),e("p",[t._v("Navicat for MySQL 可连接任何本机或远程 MySQL 服务器,功能包括数据模型工具、数据同步、导入或导出、报表、以及更多功能。")]),t._v(" "),e("p",[t._v("那么没有 sql 经验的同学，可以尝试这个可视化工具，减少一些学习成本，通过简单的可视化操作完成建表、查询等一系列操作。")]),t._v(" "),e("h5",{attrs:{id:"连接-mysql"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#连接-mysql"}},[t._v("#")]),t._v(" 连接 Mysql")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/67aa5b12f8db4e01bb922d9627d9b137~tplv-k3u1fbpfcp-watermark.image",alt:'"image.png"'}})]),t._v(" "),e("h5",{attrs:{id:"创建数据库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建数据库"}},[t._v("#")]),t._v(" 创建数据库")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/66a6176f3b6d458aac718c889504f8a2~tplv-k3u1fbpfcp-watermark.image",alt:'"image.png"'}})]),t._v(" "),e("h5",{attrs:{id:"查询表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查询表"}},[t._v("#")]),t._v(" 查询表")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4377cfe795204a7cb5cf0d8044308f83~tplv-k3u1fbpfcp-watermark.image",alt:'"image.png"'}})]),t._v(" "),e("p",[t._v("当然这个工具是需要付费的，作为学习整本小册来说，15 天的试用期也是足够了，如果还想使用可视化工具的话，建议同学们可以使用免费的 "),e("strong",[t._v("SQLite")]),t._v(" 或者 "),e("strong",[t._v("SQLyog")]),t._v("。毕竟学习为目的的话，可以节约成本，同时 "),e("strong",[t._v("SQLite")]),t._v(" 跟 "),e("strong",[t._v("SQLyog")]),t._v(" 也是一款非常出色的可视化工具。")]),t._v(" "),e("h3",{attrs:{id:"postman"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#postman"}},[t._v("#")]),t._v(" Postman")]),t._v(" "),e("p",[t._v("Postman 是一个 Chrome 扩展，提供功能强大的 Web API & HTTP 请求调试。使用 Node 开发服务端项目，用它来测试接口比较方便。")]),t._v(" "),e("p",[t._v("Postman 有 Chrome 插件与 App 两种版本，"),e("a",{attrs:{href:"https://www.postman.com/downloads/",target:"_blank",rel:"noopener noreferrer"}},[t._v("下载地址"),e("OutboundLink")],1),t._v("。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/71fd9b7e8dcb471f8644806121c47e87~tplv-k3u1fbpfcp-watermark.image",alt:'"image.png"'}})]),t._v(" "),e("p",[t._v("具体使用在下个章会有介绍，先安装完预备着。")]),t._v(" "),e("h3",{attrs:{id:"egg"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#egg"}},[t._v("#")]),t._v(" Egg")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://eggjs.org/zh-cn/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Egg.js"),e("OutboundLink")],1),t._v(" 为企业级框架和应用而生（引自官网介绍）。")]),t._v(" "),e("p",[t._v("这里之所以没有使用 "),e("a",{attrs:{href:"https://koa.bootcss.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Koa"),e("OutboundLink")],1),t._v(" 是因为过于简单，对于一个稍具规模的中型项目不太适合，而 "),e("a",{attrs:{href:"https://nestjs.bootcss.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("NestJS"),e("OutboundLink")],1),t._v(" 与 "),e("a",{attrs:{href:"https://www.midwayjs.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Midway"),e("OutboundLink")],1),t._v(" 的上手成本比较高，对于初中级前端来说，可能会有一定学习成本。")]),t._v(" "),e("p",[t._v("所以本系列将使用 Egg 来作为 Node 框架作为学习 demo。如果有同学更喜欢 NestJS 模式的开发框架，可以以小册的设计与 demo 作为参考，进行项目学习。后期可能会出一个 Midway 升级版， Egg 项目迁移到 Midway 还是较为方便。")]),t._v(" "),e("p",[t._v("直接选择基础的 ts egg 版本进行开发。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("$ mkdir egg-example && cd egg-example\\n$ npm init egg\\n$ yarn\\n\n")])])]),e("p",[e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7acb1662297a46628564bd6961b5c172~tplv-k3u1fbpfcp-zoom-1.image",alt:'""'}})]),t._v(" "),e("p",[t._v("启动项目：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("$ yarn dev\\n\n")])])]),e("p",[t._v("浏览器输入 "),e("code",[t._v("http://localhost:7001")]),t._v("，即可查看页面：")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/44a7a5fad25343429903f6f1cdc71f26~tplv-k3u1fbpfcp-watermark.image",alt:'"image.png"'}})]),t._v(" "),e("p",[t._v("这只是一个简单的 ts 模板，在项目开发中，还需要增加额外的插件或配置更改。")]),t._v(" "),e("h2",{attrs:{id:"构建环境配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#构建环境配置"}},[t._v("#")]),t._v(" 构建环境配置")]),t._v(" "),e("h3",{attrs:{id:"jenkins"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jenkins"}},[t._v("#")]),t._v(" Jenkins")]),t._v(" "),e("p",[t._v("Jenkins 是一个开源的、提供友好操作界面的持续集成(CI)工具，起源于 Hudson（Hudson 是商用的），主要用于持续、自动的构建/测试软件项目、监控外部任务的运行。Jenkins 用 Java 语言编写，可在 Tomcat 等流行的 servlet 容器中运行，也可独立运行。通常与版本管理工具(SCM)、构建工具结合使用。常用的版本控制工具有 SVN、GIT，构建工具有 Maven、Ant、Gradle。")]),t._v(" "),e("p",[t._v("在此项目中，Jenkins 作为主要构建工具来搭配使用。")]),t._v(" "),e("h4",{attrs:{id:"安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),e("h5",{attrs:{id:"java-环境配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#java-环境配置"}},[t._v("#")]),t._v(" Java 环境配置")]),t._v(" "),e("p",[t._v("由于 Jenkins 是使用 Java 编写，需要 Java 的运行环境，根据自己的系统选择下载对应的 "),e("a",{attrs:{href:"https://www.oracle.com/java/technologies/javase-downloads.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("JAVA SDK 1.8"),e("OutboundLink")],1),t._v(" 版本（Windows、Mac、Linux）。")]),t._v(" "),e("p",[t._v("接下来需要配置 Java 环境变量，先介绍较复杂的 Windows 环境变量配置步骤。")]),t._v(" "),e("ol",[e("li",[t._v("下载 Java Windows Installer，双击安装（不建议直接安装 C 盘，可以选择其他的安装路径）。")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5e5029ea5fce438bb5e9b4a68d98bee1~tplv-k3u1fbpfcp-watermark.image",alt:'"image.png"'}})]),t._v(" "),e("p",[t._v("NaN.  打开电脑环境变量窗口，win 键直接搜索环境变量即可。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2d80e7614b7840e8b227a51e7afa2e9b~tplv-k3u1fbpfcp-watermark.image",alt:'"image.png"'}})]),t._v(" "),e("p",[t._v("NaN.  新建 JAVA_HOME 变量。")]),t._v(" "),e("ul",[e("li",[t._v("变量名："),e("strong",[t._v("JAVA_HOME")])]),t._v(" "),e("li",[t._v("变量值：Java Installer 安装地址")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/71fca764c0614410a8c8763f78c2b65f~tplv-k3u1fbpfcp-watermark.image",alt:'"image.png"'}})]),t._v(" "),e("p",[t._v("NaN.  新建/修改 CLASSPATH 变量。")]),t._v(" "),e("ul",[e("li",[t._v("变量名："),e("strong",[t._v("CLASSPATH")])]),t._v(" "),e("li",[t._v("变量值："),e("code",[t._v(".;%JAVA_HOME%\\\\lib\\\\dt.jar;%JAVA_HOME%\\\\lib\\\\tools.jar;")]),t._v("（不要遗漏前面的.;）")])]),t._v(" "),e("p",[t._v("NaN.  修改 Path 变量。")]),t._v(" "),e("p",[t._v("新增两条路径")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("%JAVA_HOME%\\\\bin")])]),t._v(" "),e("li",[e("code",[t._v("%JAVA_HOME%\\\\jre\\\\bin")])])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7056ee0f983f49dfb01f1814f5a7a84d~tplv-k3u1fbpfcp-watermark.image",alt:'"image.png"'}})]),t._v(" "),e("p",[t._v("NaN.  打开 cmd，输入 java，出现如下指令提示，则代表 Java 环境配置成功。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8da83c382efd4408ac7c9fb1b2ef65e2~tplv-k3u1fbpfcp-watermark.image",alt:'"image.png"'}})]),t._v(" "),e("h5",{attrs:{id:"windows-版本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#windows-版本"}},[t._v("#")]),t._v(" Windows 版本")]),t._v(" "),e("p",[t._v("直接下载 Windows 版本的 "),e("a",{attrs:{href:"https://www.jenkins.io/download/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Jenkins"),e("OutboundLink")],1),t._v(" 安装包。")]),t._v(" "),e("ol",[e("li",[t._v("双击安装包，选择 "),e("code",[t._v("Run service as LocalSystem")]),t._v("，接下来一路 Next 即可")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3ca1089c34544a6abfc57cdeb810cc35~tplv-k3u1fbpfcp-watermark.image",alt:'"image.png"'}})]),t._v(" "),e("p",[t._v("NaN.  安装完之后打开 Jenkins 页面需要密码，按照提示路径可以找到对应的密码，输入进去，初始化 Jenkins")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e8a15c79d67a4d1184e5492dba3b7954~tplv-k3u1fbpfcp-watermark.image",alt:'"image.png"'}})]),t._v(" "),e("p",[t._v("NaN.  安装推荐插件或者选择自定义后期在安装插件都行")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1fd95b6106664da0bd36e4ab9e8d8767~tplv-k3u1fbpfcp-watermark.image",alt:'"image.png"'}})]),t._v(" "),e("p",[t._v("NaN.  创建管理员账号之后，完成 Jenkins 安装")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/20afd70d459a4067b2643b01f92da276~tplv-k3u1fbpfcp-watermark.image",alt:'"image.png"'}})]),t._v(" "),e("blockquote",[e("p",[t._v("虽然教程使用的是 Windows 版本，不建议用，有兴趣的同学可以是用之前搭建的虚拟机，用 Centos 来安装 Jenkins，体验效果翻倍")])]),t._v(" "),e("h5",{attrs:{id:"mac-版本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mac-版本"}},[t._v("#")]),t._v(" Mac 版本")]),t._v(" "),e("p",[t._v("建议用 "),e("a",{attrs:{href:"https://www.jenkins.io/download/lts/macos/",target:"_blank",rel:"noopener noreferrer"}},[t._v("brew"),e("OutboundLink")],1),t._v(" 直接下载，比较容易管理")]),t._v(" "),e("p",[t._v("brew 安装过慢的解决方案："),e("a",{attrs:{href:"https://www.cnblogs.com/trotl/p/11862796.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("点击这里"),e("OutboundLink")],1)]),t._v(" "),e("h5",{attrs:{id:"插件安装速度过慢"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#插件安装速度过慢"}},[t._v("#")]),t._v(" 插件安装速度过慢")]),t._v(" "),e("ol",[e("li")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('先进入 [http://ip:10086/pluginManager/advanced](\\"http://ip:10086/pluginManager/advanced) 插件管理页，将地址从 [https://updates.jenkins.io/update-center.json](https://updates.jenkins.io/update-center.json) 换成 [http://mirror.xmission.com/jenkins/updates/update-center.json，可以提高下载速度。](\\"http://mirror.xmission.com/jenkins/updates/update-center.json%EF%BC%8C%E5%8F%AF%E4%BB%A5%E6%8F%90%E9%AB%98%E4%B8%8B%E8%BD%BD%E9%80%9F%E5%BA%A6%E3%80%82)\n')])])]),e("ol",{attrs:{start:"2"}},[e("li")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("修改 Jenkins/updates/default.json 配置\n")])])]),e("blockquote",[e("p",[t._v("替换 updates.jenkins-ci.org/download 为 mirrors.tuna.tsinghua.edu.cn/jenkins")])]),t._v(" "),e("blockquote",[e("p",[t._v("替换 "),e("a",{attrs:{href:"%22http://www.google.com"}},[t._v("www.google.com")]),t._v(" 为 "),e("a",{attrs:{href:"%22http://www.baidu.com"}},[t._v("www.baidu.com")])])]),t._v(" "),e("p",[t._v("修改完毕后直接浏览器输入 "),e("a",{attrs:{href:"%22http://ip:10086/restart"}},[t._v("http://ip:10086/restart")]),t._v(" 重启 Jenkins 即可。")]),t._v(" "),e("h4",{attrs:{id:"jenkins-使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jenkins-使用"}},[t._v("#")]),t._v(" Jenkins 使用")]),t._v(" "),e("h5",{attrs:{id:"pipeline-脚本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pipeline-脚本"}},[t._v("#")]),t._v(" pipeline 脚本")]),t._v(" "),e("p",[t._v("先简单介绍一下: node, agent 以及 slave 都用来指被 Jenkins master 管理的用来执行 Jenkins jobs 的服务器。")]),t._v(" "),e("p",[t._v("区别：agents 用在表述性 pipeline 中，可以不仅仅是 nodes ,还可以是 docker container 等。node（这个不是那个 js node） 用在脚本化 pipeline 中。")]),t._v(" "),e("ol",[e("li",[t._v("新建一个流水线任务")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7077aa0f4af245dbac8718de289f932a~tplv-k3u1fbpfcp-watermark.image",alt:'"image.png"'}})]),t._v(" "),e("p",[t._v("NaN.  输入配置项")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/51435c03e9a94c589768faa11ec0428a~tplv-k3u1fbpfcp-zoom-1.image",alt:'""'}})]),t._v(" "),e("p",[t._v("配置参数：")]),t._v(" "),e("p",[t._v("名称")]),t._v(" "),e("p",[t._v("描述")]),t._v(" "),e("p",[t._v("PROJECT_NAME")]),t._v(" "),e("p",[t._v("工程名称")]),t._v(" "),e("p",[t._v("PROJECT_VERSION")]),t._v(" "),e("p",[t._v("工程版本号")]),t._v(" "),e("p",[t._v("PROJECT_GIT_PATH")]),t._v(" "),e("p",[t._v("工程地址")]),t._v(" "),e("p",[t._v("BRANCH_NAME")]),t._v(" "),e("p",[t._v("工程分支")]),t._v(" "),e("p",[t._v("BUILD_PATH")]),t._v(" "),e("p",[t._v("构建目录")]),t._v(" "),e("p",[t._v("CACHE")]),t._v(" "),e("p",[t._v("是否缓存")]),t._v(" "),e("p",[t._v("NaN.  编写 "),e("code",[t._v("Pipeline script")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c21726ac54124cc3bb6c277b9d48fc97~tplv-k3u1fbpfcp-watermark.image",alt:'"image.png"'}})]),t._v(" "),e("p",[t._v("可以直接复制下述 "),e("code",[t._v("Pipeline script")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('node {\\n stage(\'Pre Git\') {\\n echo \\"${params.PROJECT_NAME},${params.PROJECT_VSERSION},${params.PROJECT_GIT_PATH}\\"\\n dir(\\"D:/jenkins/build) {\\n if(fileExists(\\"${params.PROJECT_NAME})) {\\n echo \\" git exit\\"\\n dir(\\"D:/jenkins/build/${params.PROJECT_NAME}) {\\n powershell \\" git fetch --all && git reset --hard origin/${params.BRANCH_NAME} && git pull\\"\\n powershell \\" git checkout ${params.BRANCH_NAME}\\"\\n }\\n } else {\\n echo \\" git is not exit\\"\\n powershell \\" git clone ${params.PROJECT_GIT_PATH}\\"\\n }\\n }\\n }\\n stage(\'Pre Env\') {\\n echo \\"check node_modules,${params.CACHE}\\"\\n dir(\\"D:/jenkins/build/${params.PROJECT_NAME}) { \\n if(!fileExists(\\"node_modules)) {\\n powershell \\"cnpm i\\"\\n }\\n if(!params.CACHE) {\\n echo \\"CACHE --- ${params.CACHE}\\"\\n powershell \\"rimraf node_modules\\"\\n powershell \\"cnpm i\\"\\n }\\n }\\n }\\n stage(\'build\') {\\n echo \\"check node_modules\\"\\n dir(\\"D:/jenkins/build/${params.PROJECT_NAME}) { \\n bat \\"npm run build\\"\\n }\\n }\\n stage(\'test\') {\\n echo \\"test case\\"\\n }\\n stage(\'deploy\') {\\n echo \\"deploy project\\"\\n if(!fileExists(\\"D:/jenkins/deploy/${params.PROJECT_NAME})) { \\n powershell \\" mkdir D:/jenkins/deploy/${params.PROJECT_NAME}\\"\\n }\\n if(!fileExists(\\"D:/jenkins/deploy/${params.PROJECT_NAME}/${params.PROJECT_VERSION})) { \\n powershell \\" mkdir D:/jenkins/deploy/${params.PROJECT_NAME}/${params.PROJECT_VERSION}\\"\\n }\\n powershell \\"cp D:/jenkins/build/${params.PROJECT_NAME}/${params.BUILD_PATH}/* D:/jenkins/deploy/${params.PROJECT_NAME}/${params.PROJECT_VERSION} -Recurse\\"\\n }\\n}\\n\n')])])]),e("p",[t._v("上述脚本创建了 5 个 stage，将构建流程拆分为 5 个步骤：")]),t._v(" "),e("ol",[e("li",[e("strong",[t._v("拉取项目")]),t._v("：判断本地存不存在项目，存在就 pull 不存在直接 clone")]),t._v(" "),e("li",[e("strong",[t._v("安装项目依赖")]),t._v("：判断项目依赖是否安装完毕，没有安装且强制清除缓存的情况下，先安装依赖")]),t._v(" "),e("li",[e("strong",[t._v("项目构建")]),t._v("：运行项目构建，此处后期可以把脚本抽出来")]),t._v(" "),e("li",[e("strong",[t._v("项目测试")]),t._v("：预留，后面做项目流程卡点使用")]),t._v(" "),e("li",[e("strong",[t._v("项目发布")]),t._v("：直接 cp 或者 ssh 上传到你发布的地方即可（本地搭建了 Nginx 环境，直接复制到对应的目录即可，也可以上传到对应的 CDN 或者静态服务器。）")])]),t._v(" "),e("p",[t._v("当然上述的脚本只完成了简单的构建任务，遇到复杂的系统会直接跪，简单列举下大概率会遇到的问题：")]),t._v(" "),e("ol",[e("li",[t._v("多端构建，比如一个项目需要直接构建多端产物")]),t._v(" "),e("li",[t._v("区分开发、测试、预发、线上等多环境")]),t._v(" "),e("li",[t._v("多命令构建，复杂项目可能需要执行多条命令，才能完成构建产物")]),t._v(" "),e("li",[t._v("构建产出目录，发布目录等不确定性")]),t._v(" "),e("li",[t._v("等等…………………………")])]),t._v(" "),e("blockquote",[e("p",[t._v("可以根据参数传递，多脚本等等配合解决上述问题，具体要根据业务来设计。随着小册后续的内容输出，会一一解决上述问题")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b0211abc317143b993dcd49f09d770f5~tplv-k3u1fbpfcp-zoom-1.image",alt:'""'}})]),t._v(" "),e("blockquote",[e("p",[t._v("由于使用的是 Windows 系统，文件处理脚本比较麻烦，运行速度慢而脚本还难写，"),e("strong",[t._v("强烈建议上 linux")]),t._v("。")])]),t._v(" "),e("p",[t._v("上图一共构建 5 次，由于加了缓存判断，所以只有第一次构建的时候，会去安装对应的依赖，耗时比较多。")]),t._v(" "),e("p",[t._v("一般来说，长期迭代的项目，依赖变动不会太频繁，只需要判断是否安装过依赖即可，后续的构建过程可以跳过依赖安装，直接走构建流程，节约倒杯水的时间。")]),t._v(" "),e("blockquote",[e("p",[t._v("看个人选择，高兴每次构建全部重新安装依赖也可以。"),e("strong",[t._v("做人嘛，开心最重要")]),t._v("！但每次构建的同时也会存在版本不一致的风险，开发、测试、预发、线上都有可能存在不一致的可能。")])]),t._v(" "),e("h5",{attrs:{id:"构建产物演示"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#构建产物演示"}},[t._v("#")]),t._v(" 构建产物演示")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3c6cb112641d4f3a853a937f22f29181~tplv-k3u1fbpfcp-zoom-1.image",alt:'""'}})]),t._v(" "),e("p",[e("strong",[t._v("请注意上图的链接有个版本号，这个需要配合脚手架一起改造，在脚手架篇会具体介绍")]),t._v("。")]),t._v(" "),e("h3",{attrs:{id:"nginx"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[t._v("#")]),t._v(" Nginx")]),t._v(" "),e("p",[t._v("Nginx 是一款轻量级的 Web 服务器/反向代理服务器及电子邮件（IMAP/POP3）代理服务器，并在一个 BSD-like 协议下发行，可以在 UNIX、GNU/Linux、BSD、Mac OS X、Solaris，以及 Microsoft Windows 等操作系统中运行。")]),t._v(" "),e("blockquote",[e("p",[t._v("在实际的运作中，可以支持二万至四万并发，性价比极高。没条件就自己搭建，有钱直接上 cos， cdn，云服务的配置更简单。")])]),t._v(" "),e("h4",{attrs:{id:"安装-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装-2"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),e("p",[t._v("先"),e("RouterLink",{attrs:{to:'/blogs/cicd/"http://nginx.org/en/download.html'}},[t._v("下载")]),t._v("对应系统的稳定版本，本教程中选择 Windows 版本来演示，WIndows 版本安装非常简单，解压之后移动到对应的磁盘目录即可。")],1),t._v(" "),e("p",[t._v("Nginx 常用命令如下：")]),t._v(" "),e("ol",[e("li",[t._v("启动："),e("code",[t._v("start nginx")]),t._v(" 或 "),e("code",[t._v("nginx.exe")])]),t._v(" "),e("li",[t._v("停止："),e("code",[t._v("nginx.exe -s stop")]),t._v(" 或 "),e("code",[t._v("nginx.exe -s quit")]),t._v("，stop 是快速停止 Nginx，可能并不保存相关信息；quit 是完整有序的停止 Nginx，并保存相关信息。")]),t._v(" "),e("li",[t._v("重新载入Nginx："),e("code",[t._v("nginx.exe -s reload")]),t._v("，当配置信息修改，需要重新载入这些配置时使用此命令。")]),t._v(" "),e("li",[t._v("查看版本："),e("code",[t._v("nginx -v")])])]),t._v(" "),e("p",[t._v("打开 cmd，进入对应的操作目录输入对应的命令，即可查看")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/30847ae559734bc08eb6e461b176c618~tplv-k3u1fbpfcp-watermark.image",alt:'"image.png"'}})]),t._v(" "),e("p",[t._v("输入 "),e("code",[t._v("start nginx")]),t._v(" 之后，浏览器输入 "),e("code",[t._v("http://localhost/")]),t._v("，出现 "),e("strong",[t._v("Welcome to nginx!")]),t._v("，则代表成功启动")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/89ef0ea504214c9ab4daf53e38a7ade6~tplv-k3u1fbpfcp-watermark.image",alt:'"image.png"'}})]),t._v(" "),e("h4",{attrs:{id:"配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[t._v("#")]),t._v(" 配置")]),t._v(" "),e("p",[t._v("简单介绍一下 Nginx 的配置，前面搭建的 Jenkins 与 GitLab 都是通过 Ip 来访问的，正常在访问对应项目的时候都是根据域名来访问。")]),t._v(" "),e("h5",{attrs:{id:"配置多域名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置多域名"}},[t._v("#")]),t._v(" 配置多域名")]),t._v(" "),e("ol",[e("li",[t._v("修改本地的 host 文件（需要赋予管理员权限）")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fb7f4fe0903f4eb598025ac2bbbd2d08~tplv-k3u1fbpfcp-watermark.image",alt:'"image.png"'}})]),t._v(" "),e("p",[t._v("NaN.  修改 "),e("code",[t._v("conf/nginx.conf")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("http {\\n include mime.types;\\n default_type application/octet-stream;\\n sendfile on;\\n keepalive_timeout 65;\\n #gzip on;\\n ## jenkins 服务\\n server{\\n listen 80; \\n server_name jenkins.cookieboty.com;\\n location / {\\n proxy_pass http://127.0.0.1:8080;\\n }\\n }\\n ## gitlab 服务\\n server{\\n listen 80; \\n server_name gitlab.cookieboty.com;\\n location / {\\n proxy_pass http://192.168.160.88:8888;\\n }\\n }\\n ## Egg 服务\\n server{ \\n listen 80; \\n server_name devops.cookieboty.com;\\n location / {\\n proxy_pass http://127.0.0.1:7001;\\n }\\n }\\n server {\\n listen 80;\\n server_name nginx.cookieboty.com;\\n location / {\\n root html;\\n index index.html index.htm;\\n }\\n error_page 500 502 503 504 /50x.html;\\n location = /50x.html {\\n root html;\\n }\\n }\\n}\\n\n")])])]),e("p",[t._v("修改完毕之后不要可以使用 "),e("code",[t._v("nginx.exe -t -c ./conf/nginx.conf")]),t._v("，测试一下配置文件编写是否正确。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7da3d0b5be69461890741d677e2daa90~tplv-k3u1fbpfcp-watermark.image",alt:'"image.png"'}})]),t._v(" "),e("p",[t._v("NaN.  输入 "),e("code",[t._v("nginx.exe -s reload")]),t._v(" 重启 Nginx 配置，接下来可以使用域名来访问之前搭建的服务了。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/907042ad2bd74f8eba419a96c887b534~tplv-k3u1fbpfcp-watermark.image",alt:'"image.png"'}})]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b423bb2626804d1fb3da3f4a7c867803~tplv-k3u1fbpfcp-watermark.image",alt:'"image.png"'}})]),t._v(" "),e("h5",{attrs:{id:"配置静态资源"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置静态资源"}},[t._v("#")]),t._v(" 配置静态资源")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('server { #这里是我自己配置服务端口\\n listen 10010;\\n server_name resouce;\\n root D:/jenkins/deploy; #访问文件根目录\\n autoindex on; #是否浏览文件下的列表\\n location / { #是否允许跨域\\n add_header Access-Control-Allow-Origin *;\\n }\\n add_header Cache-Control \\"no-cache,must-revalidate\\";# 是否缓存\\n}\\n\n')])])]),e("p",[t._v("根据上述配置，可以简单的配置一个静态服务器。把前端项目丢进去，直接访问对应的端口即可。")]),t._v(" "),e("blockquote",[e("p",[t._v("上述代码，直接 copy 到 nginx.config 里面，然后重启即可。")])]),t._v(" "),e("p",[t._v("此章的内容比较多，主要是开发与构建环境的配置也涉及部分 shell 脚本编写。没有列出来的工具会在后续开发过程中需要使用的时候在逐一介绍。")]),t._v(" "),e("p",[t._v("跟着上述所有的步骤进行操作的话，此时你已经成功启动了一个 Egg 服务以及准备好开发项目所需要的环境与软件。")])])}),[],!1,null,null,null);a.default=s.exports}}]);