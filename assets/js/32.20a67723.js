(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{546:function(t,e,a){"use strict";a.r(e);var s=a(3),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("在文章之前，先抛一些灵魂拷问：")]),t._v(" "),a("ul",[a("li",[t._v("前端代码从 tsx/jsx 到部署上线被用户访问，中间大致会经历哪些过程？")]),t._v(" "),a("li",[t._v("上述过程中分别都有哪些考虑、指标和优化点，以满足复杂的业务需求？")]),t._v(" "),a("li",[t._v("可能大部分同学都知道强缓存/协商缓存，那前端各种产物（HTML、JS、CSS、IMAGES 等）应该用什么缓存策略？以及为什么？\n"),a("ul",[a("li",[t._v("若使用协商缓存，但静态资源却不频繁更新，如何避免协商过程的请求浪费？")]),t._v(" "),a("li",[t._v("若使用强缓存，那静态资源如何更新？")])])]),t._v(" "),a("li",[t._v("配套的，前端静态资源应该如何组织？")]),t._v(" "),a("li",[t._v("配套的，自动化构建 & 部署过程如何与 CDN 结合？")]),t._v(" "),a("li",[t._v("如何避免前端上线，影响未刷新页面的用户？")]),t._v(" "),a("li",[t._v("刚上线的版本发现有阻塞性 bug，如何做到秒级回滚，而非再次部署等 20 分钟甚至更久？")]),t._v(" "),a("li",[t._v("如何实现一个预发环境，除了前端资源外都是线上环境，将变量控制前端环境内？")]),t._v(" "),a("li",[t._v("部署环节如何方便配套做 AB 测试等？")]),t._v(" "),a("li",[t._v("如何实现一套前端代码，发布成多套环境产物？")]),t._v(" "),a("li",[t._v("如何实现按 feature 发布产物供用户使用，并逐步扩大 feature 灰度，将影响减到最小（即线上同时存在多 feature 产物）？")]),t._v(" "),a("li",[t._v("CDN 域名突然挂了，如何实现秒级 CDN 降级修补而非再次全部业务重新部署一次？")])]),t._v(" "),a("p",[t._v("本文将会带着这些问题，试着一起探索在2021年，系统化的前端部署解决方案。")]),t._v(" "),a("blockquote",[a("p",[t._v("PS：本篇关于静态资源组织的问题&思路等，借鉴自知乎大佬张云龙这篇回答 "),a("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fwww.zhihu.com%2Fquestion%2F20790576",title:"https://www.zhihu.com/question/20790576",target:"_blank",rel:"noopener noreferrer"}},[t._v("大公司里怎样开发和部署前端代码? - 知乎"),a("OutboundLink")],1)])]),t._v(" "),a("h1",{attrs:{id:"静态资源组织"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态资源组织"}},[t._v("#")]),t._v(" 静态资源组织")]),t._v(" "),a("h2",{attrs:{id:"一个简单的页面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一个简单的页面"}},[t._v("#")]),t._v(" 一个简单的页面")]),t._v(" "),a("p",[t._v("先从简单的静态页面开始，众所周知，前端资源由 "),a("code",[t._v("HTML")]),t._v("、"),a("code",[t._v("JavaScript")]),t._v("、"),a("code",[t._v("CSS")]),t._v(" 三剑客组成，假设我们有一个简单的页面，用"),a("code",[t._v("Nginx")]),t._v("作为 Web 服务器，资源组织结构大概如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/240634c5beaf49db92713ee281fa98fe~tplv-k3u1fbpfcp-watermark.awebp",alt:""}})]),t._v(" "),a("p",[t._v("此时， 只需将 "),a("code",[t._v("HTML")]),t._v("、"),a("code",[t._v("JavaScript")]),t._v("、"),a("code",[t._v("CSS")]),t._v(" 等静态资源通过 "),a("code",[t._v("FTP")]),t._v(" 等软件，上传到 "),a("code",[t._v("Web")]),t._v(" 服务器（如 "),a("code",[t._v("Nginx")]),t._v("）某目录，将 "),a("code",[t._v("Nginx")]),t._v(" 启动做简单配置即可让用户访问。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0cd65d8a393b4d7abf2f6fe8eddb845f~tplv-k3u1fbpfcp-watermark.awebp",alt:""}})]),t._v(" "),a("p",[t._v("用户一访问，状态 200，页面渲染出来，前端十分简单，对不对？")]),t._v(" "),a("h2",{attrs:{id:"利用缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#利用缓存"}},[t._v("#")]),t._v(" 利用缓存")]),t._v(" "),a("p",[t._v("但仔细观察，用户每次访问都会请求 "),a("code",[t._v("foo.css")]),t._v(", "),a("code",[t._v("bar.css")]),t._v(" 等静态文件，即使该文件并无变更。对带宽甚是浪费，对页面首屏性能等也有影响。于是在网络带宽紧张的互联网早期，计算机先贤们在 "),a("code",[t._v("HTTP")]),t._v(" 协议上制定了多种缓存策略。")]),t._v(" "),a("blockquote",[a("p",[t._v("浏览器缓存：浏览器缓存("),a("code",[t._v("Brower Caching")]),t._v(")是浏览器对之前请求过的文件进行缓存，以便下一次访问时重复使用，节省带宽，提高访问速度，降低服务器压力。")])]),t._v(" "),a("h3",{attrs:{id:"协商缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存"}},[t._v("#")]),t._v(" 协商缓存")]),t._v(" "),a("p",[t._v('一种策略是浏览器先问问服务器有没有变化，没变化就用旧资源。毕竟"问一问"的通信成本，远小于每次重新加载资源的成本。大致流程如下：')]),t._v(" "),a("blockquote",[a("p",[t._v("协商缓存: 向服务器发送请求，服务器会根据这个请求的 "),a("code",[t._v("Request Header")]),t._v(" 的一些参数来判断是否命中协商缓存，如果命中，则返回 "),a("code",[t._v("304")]),t._v(" 状态码并带上新的 "),a("code",[t._v("Response Header")]),t._v(" 通知浏览器从缓存中读取资源；")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d0ad7ad5454544cc9f6df1a8d9b7cdfb~tplv-k3u1fbpfcp-watermark.awebp",alt:""}})]),t._v(" "),a("p",[t._v("此时，使用协商缓存后，"),a("code",[t._v("Network")]),t._v(" 大致变成了这样：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/149bb0b9e97f4032b1bd652d46e3f606~tplv-k3u1fbpfcp-watermark.awebp",alt:""}})]),t._v(" "),a("blockquote",[a("p",[t._v("注：协商缓存一般可在服务端通过设置 "),a("code",[t._v("Last-Modifed")]),t._v("、"),a("code",[t._v("ETag")]),t._v(" 等 "),a("code",[t._v("ResponseHeader")]),t._v(" 实现。"),a("br"),t._v("\n注："),a("code",[t._v("304")]),t._v(" 状态码，表示资源未发生变更，可使用浏览器缓存。")])]),t._v(" "),a("h3",{attrs:{id:"强缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#强缓存"}},[t._v("#")]),t._v(" 强缓存")]),t._v(" "),a("p",[t._v("这样，通过协商缓存，我们大幅优化了资源未变更时的网络请求，节约大量带宽，网站首屏性能也有不错的提升，美滋滋！"),a("br"),t._v("\n然而仔细观察，发现仍然有协商的过程，一百个静态文件就有一百个协商请求。在资源未发生变更时，追求极致的我们也应该优化掉这个协商请求，毕竟没有买卖就没有伤害！"),a("br"),t._v("\n和协商缓存对应的是使用强缓存，大概过程如下：")]),t._v(" "),a("blockquote",[a("p",[t._v("强缓存：浏览器不会向服务器发送任何请求，直接从本地缓存中读取文件并返回"),a("code",[t._v("Status Code: 200 OK")]),t._v("。")])]),t._v(" "),a("p",[t._v("此时，强缓存的大致对话过程如图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5ba66dc474384c9488d1485bef852c2a~tplv-k3u1fbpfcp-watermark.awebp",alt:""}})]),t._v(" "),a("blockquote",[a("p",[t._v("注意，缓存生效期间，浏览器是【自言自语】，和服务器无关。")])]),t._v(" "),a("p",[t._v("此时，设置强缓存后，Network 大致变成了这样：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a2dcf2ef211d4920be62e5b79e416ae6~tplv-k3u1fbpfcp-watermark.awebp",alt:""}})]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("From DiskCache")]),t._v("：从硬盘中读取。"),a("br"),t._v(" "),a("code",[t._v("From MemoryCache")]),t._v("：从内存中读取，速度最快。"),a("br"),t._v("\n注：强缓存一般可在服务端通过设置 "),a("code",[t._v("Cache-Control:max-age")]),t._v("、"),a("code",[t._v("Expires")]),t._v(" 等 "),a("code",[t._v("ResponseHeader")]),t._v(" 实现。")])]),t._v(" "),a("p",[t._v("用上强缓存后，协商的请求也被消灭了，网站加载的性能达到极致了。美滋滋！")]),t._v(" "),a("h3",{attrs:{id:"附录：协商缓存和强缓存详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#附录：协商缓存和强缓存详解"}},[t._v("#")]),t._v(" 附录：协商缓存和强缓存详解")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.cn/post/6844903838768431118",title:"https://juejin.cn/post/6844903838768431118",target:"_blank",rel:"noopener noreferrer"}},[t._v("强缓存/协商缓存详解"),a("OutboundLink")],1)]),t._v(" "),a("blockquote",[a("p",[t._v("注：校招生或客户端转前端同学，关于强缓存/协商缓存的实现及使用先了解即可。"),a("br"),t._v("\n后续再熟练掌握。")])]),t._v(" "),a("h2",{attrs:{id:"缓存更新问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存更新问题"}},[t._v("#")]),t._v(" 缓存更新问题")]),t._v(" "),a("p",[t._v("鉴于页面（"),a("code",[t._v("index.html")]),t._v("）会频繁更新，而静态资源则相对稳定。所以，我们能推断出的一种缓存策略是 "),a("code",[t._v("index.html")]),t._v(" 适合走协商缓存，相对稳定 & 不常更新的静态资源（"),a("code",[t._v("JS")]),t._v("、"),a("code",[t._v("CSS")]),t._v("、"),a("code",[t._v("IMAGE")]),t._v("S） 等应该消灭协商请求，使用强缓存。"),a("br"),t._v("\n然而问题很快就来了，都不让浏览器发请求，但缓存还未到期我们发现有 "),a("code",[t._v("bug")]),t._v("，想更新 "),a("code",[t._v("foo.css")]),t._v(" 怎么办？"),a("br"),t._v("\n又想设置尽量长的时间走缓存，又想要能随时更新？"),a("br"),t._v("\n又想马儿跑又不给马儿吃草？")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4b41a182750b48cfb5df9a5b0ab2b40b~tplv-k3u1fbpfcp-watermark.awebp?",alt:"image.png"}}),t._v(" 相信大家很快就能得出一种思路，给资源加版本号！比如通过 "),a("code",[t._v("query")]),t._v(" 加版本号，每次上线统一改版本号就搞定了。此时 "),a("code",[t._v("HTML")]),t._v(" 变成如图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ff668da65572486db031eb113caaaaf1~tplv-k3u1fbpfcp-watermark.awebp",alt:""}})]),t._v(" "),a("blockquote",[a("p",[t._v("注意，此时服务器内只有一份文件 "),a("code",[t._v("foo.css")]),t._v(" 文件。")])]),t._v(" "),a("p",[t._v("统一加版本号的优点是简单粗暴快捷，但缺点则是：假如我们只想更新 "),a("code",[t._v("foo.css")]),t._v("，但 "),a("code",[t._v("bar.css")]),t._v(" 缓存也失效了，又造成了带宽的浪费。"),a("br"),t._v("\n大家应该很快就能想到办法，需要将文件内容与版本号（URL）绑定，当文件内容发生变更时才变更版本号（"),a("code",[t._v("URL")]),t._v("），这样就能实现每个文件精确的缓存控制。"),a("br"),t._v("\n什么东西与文件内容相关呢？ "),a("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fwww.baike.com%2Fwikiid%2F1412805162344902915%3Fsearch_id%3D3k1jee3i202000%26prd%3Dsearch_sug%26view_id%3D2p9w1v50ati000",title:"https://www.baike.com/wikiid/1412805162344902915?search_id=3k1jee3i202000&prd=search_sug&view_id=2p9w1v50ati000",target:"_blank",rel:"noopener noreferrer"}},[t._v("消息摘要算法"),a("OutboundLink")],1),t._v(" ，对文件求摘要信息，摘要信息与文件内容一一对应，就有了一种可以精确到单个文件粒度的缓存控制依据。现在，我们把 "),a("code",[t._v("URL")]),t._v(" 改成带文件摘要信息的：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/93a85382a9f14e94b7c889a36f11809d~tplv-k3u1fbpfcp-watermark.awebp?",alt:"image.png"}}),t._v(" 我们可以称这种这个方式为 "),a("code",[t._v("query-hash")]),t._v("，后续发版上线时，只有被变更文件的 "),a("code",[t._v("URL")]),t._v(" 会更新，实现了精确的缓存控制，完美！")]),t._v(" "),a("blockquote",[a("p",[t._v("注意，此时服务器内只有一份文件 "),a("code",[t._v("foo.css")]),t._v(" 文件。")])]),t._v(" "),a("h2",{attrs:{id:"覆盖式发布引发的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#覆盖式发布引发的问题"}},[t._v("#")]),t._v(" 覆盖式发布引发的问题")]),t._v(" "),a("p",[t._v("然而假如我们就按上述部署方案就上了线，很快就会 Fatal 满天飞，每次更新上线都可能会出现灾难。"),a("br"),t._v("\n我们回顾一下，网站的静态文件只有一份，部署在 "),a("code",[t._v("Nginx")]),t._v(" 服务器某目录下，并且通过 "),a("code",[t._v("query-hash")]),t._v(" 的方式实现按文件做精确缓存控制，问题出在哪了呢？"),a("br"),t._v("\n回顾一下，我们某次更新时，更改了 "),a("code",[t._v("foo.css")]),t._v(" 样式，此时会将 HTML 中的foo.css url更新为最新的 hash，并将服务器中存储的 foo.css & index.html 文件覆盖为最新（V2版本），看似HTML和静态资源都对应更新了，但是没有考虑极端情况。那就是：")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("先部署静态资源，部署期间访问时，会出现V1版本HTML访问到V2版本新静态资源，并按V1-hash缓存起来。")])]),t._v(" "),a("li",[a("strong",[t._v("先部署HTML，部署期间访问时，会出现V2版本HTML访问到V1版本旧静态资源，并按V2-hash缓存起来。")])])]),t._v(" "),a("blockquote",[a("p",[t._v("如下图所示，展示了不同版本HTML与不同版本静态资源互相匹配到出现的异常Case。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/afed5037b76e48caac538b05d4db79b7~tplv-k3u1fbpfcp-watermark.awebp?",alt:"image.png"}})]),t._v(" "),a("blockquote",[a("p",[t._v("绿色走向：正常访问并建立缓存的路径。"),a("br"),t._v("\n红色走向：先部署静态资源（V2），V1-HTML访问V2静态资源并缓存Case"),a("br"),t._v("\n黑色走向：先部署HTML（V2），V2-HTML访问V1资源并缓存Case")])]),t._v(" "),a("p",[t._v("对于问题1，会有两种子Case：")]),t._v(" "),a("ol",[a("li",[t._v("用户本地有缓存，此时无影响可正常访问。")]),t._v(" "),a("li",[t._v("用户本地无缓存，则会将V2版本静态资源加载并按V1版本 hash 缓存起来。用户报错。当V2版本HTML部署完成后，用户再次访问时恢复。")])]),t._v(" "),a("p",[t._v("对于问题2，则会出现严重的Case："),a("br"),t._v("\nV2 版本HTML，会将V1版本静态资源按V2版本Hash缓存起来。此时页面会出错，且缓存过期之前会持续报错。直到用户手动清除缓存，或者缓存过期，或者将来发布V3版本更新静态资源版本。否则用户会持续出错。"),a("br"),t._v("\n上面方案的问题起源于静态资源只有一份，每次发布时都是"),a("strong",[t._v("覆盖式发布")]),t._v("，导致页面与静态资源出现匹配错误的情况！解决问题方案也极其简单，使用"),a("strong",[t._v("非覆盖式发布")]),t._v("，一种简单的改造方式是将文件摘要（"),a("code",[t._v("hash")]),t._v("）放置到"),a("code",[t._v("URL")]),t._v(" 中，即将 "),a("code",[t._v("query-hash")]),t._v(" 改为 "),a("code",[t._v("name-hash")]),t._v("。"),a("br"),t._v("\n此时 HTML 变成如图： "),a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/69518680dfe345d6a4d74b4c00772111~tplv-k3u1fbpfcp-watermark.awebp?",alt:"image.png"}})]),t._v(" "),a("p",[t._v("这样，每次部署时先全量部署静态资源，再灰度部署页面，就能比较完美的解决了缓存的问题。")]),t._v(" "),a("blockquote",[a("p",[t._v("此时，服务器上会存在多份 "),a("code",[t._v("foo.[$hash].css")]),t._v(" 文件")])]),t._v(" "),a("h2",{attrs:{id:"与-cdn-结合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#与-cdn-结合"}},[t._v("#")]),t._v(" 与 CDN 结合")]),t._v(" "),a("p",[t._v("现在我们开开心心将网站部署上线了，但我们此时仍然将静态资源部署在 Nginx 服务器目录下，然后新的问题来了，随着时间推移，非覆盖部署导致文件逐渐增加多，硬盘逐渐吃紧。而且将文件存储在 "),a("code",[t._v("Nginx")]),t._v(" "),a("code",[t._v("Web")]),t._v("服务器内某目录下，深度的将 "),a("code",[t._v("Nginx")]),t._v("、网站、部署过程等强耦合在一起，无法使用 "),a("code",[t._v("CDN")]),t._v(" 技术。")]),t._v(" "),a("blockquote",[a("p",[t._v("CDN 是一种内容分发网络，部署在应用层，利用智能分配技术，根据用户访问的地点，按照就近访问的原则分配到多个节点，来实现多点负载均衡。"),a("br"),t._v("\n简单来说，用户就近访问，访问速度更快，大公司也无需搞一台超级带宽的存储服务器，只需使用多台正常带宽的 CDN 节点即可。"),a("br"),t._v("\n而 CDN 的常见实现是有一台源站服务器，多个 CDN 节点定时从源站同步。")])]),t._v(" "),a("p",[t._v("那如何将 CDN 与 Nginx 等 Web 服务器结合呢？"),a("br"),t._v("\n答案是将静态资源部署到 "),a("code",[t._v("CDN")]),t._v(" 上，再将 "),a("code",[t._v("Nginx")]),t._v(" 上的流量转发到 "),a("code",[t._v("CDN")]),t._v(" 上，这种技术我们称之为『"),a("strong",[t._v("反向代理")]),t._v("』。"),a("br"),t._v("\n此时，用户访问时流量走向 & 研发构建部署过程大致如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/97e4477aff4a426896dcfee9a9492a41~tplv-k3u1fbpfcp-watermark.awebp?",alt:"image.png"}}),t._v(" 此时，我们总体部署方案需要进一步做三步改造。")]),t._v(" "),a("ol",[a("li",[t._v("构建时依据环境变量，将 "),a("code",[t._v("HTML")]),t._v(" 中的静态资源地址加上 "),a("code",[t._v("CDN")]),t._v(" 域名。")]),t._v(" "),a("li",[t._v("构建完成后将静态资源上传到 "),a("code",[t._v("CDN")]),t._v(" 。")]),t._v(" "),a("li",[t._v("配置 "),a("code",[t._v("Nginx")]),t._v(" 的反向代理，将静态资源流量转发到 "),a("code",[t._v("CDN")]),t._v("。")])]),t._v(" "),a("p",[t._v("其中，第 1、2 条涉及构建过程调整，以 "),a("code",[t._v("Webpack")]),t._v(" 为例，我们需要做以下配置改造：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("a.  配置 `output` 为 `content-hash` & `publicPath`  \nb.  配置 `Webpack-HTML-Plugin`\n")])])]),a("p",[t._v("下面是一个配置示例：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/57f6d3ee8bc64ab38c875ee37e140b9b~tplv-k3u1fbpfcp-watermark.awebp?",alt:"image.png"}})]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// webpack.config.js")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CDN_HOST")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CDN_HOST")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// CDN 域名")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CDN_PATH")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CDN_PATH")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// CDN 路径")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ENV")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ENV")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当前的环境等等")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VERSION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VERSION")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当前发布的版本")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getPublicPath")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Some code here")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CDN_HOST")]),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CDN_PATH")]),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ENV")]),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 依据 ENV 等动态构造 publicPath")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" publicPath "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NODE_ENV")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'production'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPublicPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        output"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            filename"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bundle.[name][contenthash:8].js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            publicPath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        plugins"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HtmlWebpackPlugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br")])]),a("blockquote",[a("p",[t._v("备注1：我们往往会将一套代码部署到多套前端环境，还需要在构建时注入当前部署相关环境变量（如 "),a("code",[t._v("staging")]),t._v("、"),a("code",[t._v("prod")]),t._v("、"),a("code",[t._v("dev")]),t._v("、"),a("code",[t._v("pre")]),t._v("等），以便动态构建 "),a("code",[t._v("publicPath")]),t._v("。"),a("br"),t._v("\n备注 2：这里动态构造的 publicPath 里，严格的将产物按环境 + 发布版本做了隔离 & 收敛。 某业务前端曾将所有环境的静态资源放到一起，以Hash做区分。但疑似出现了文件名 + hash 冲突，但文件内容不一样，导致了线上事故。故墙裂建议严格对产物做物理隔离。"),a("br"),t._v("\n备注 3："),a("code",[t._v("publicPath")]),t._v(" 详解"),a("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fwebpack.docschina.org%2Fconfiguration%2Foutput%2F%23outputpublicpath",title:"https://webpack.docschina.org/configuration/output/#outputpublicpath",target:"_blank",rel:"noopener noreferrer"}},[t._v("webpack.docschina.org/configurati…"),a("OutboundLink")],1),a("br"),t._v("\n备注 4：此处使用了 "),a("code",[t._v("content-hash")]),t._v("，与 "),a("code",[t._v("hash")]),t._v("、"),a("code",[t._v("chunkhash")]),t._v(" 的区别请见："),a("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fwww.cnblogs.com%2Fajaemp%2Fp%2F12915452.html",title:"https://www.cnblogs.com/ajaemp/p/12915452.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("详解webpack中的hash、chunkhash、contenthash区别"),a("OutboundLink")],1),a("br"),t._v("\n备注 5：使用 "),a("code",[t._v("contenthash")]),t._v(" 时，往往会增加一个小模块后，整体文件的 "),a("code",[t._v("hash")]),t._v(" 都发生变化，原因为"),a("code",[t._v("Webpack")]),t._v(" 的 "),a("code",[t._v("module.id")]),t._v(" 默认基于解析顺序自增，从而引发缓存失效。具体可通过设置 "),a("code",[t._v("optimization.moduleIds")]),t._v(" 设置为 "),a("code",[t._v("'deterministic'")]),t._v(" 。"),a("br"),t._v("\n具体详见 "),a("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fwebpack.docschina.org%2Fguides%2Fcaching%2F",title:"https://webpack.docschina.org/guides/caching/",target:"_blank",rel:"noopener noreferrer"}},[t._v("webpack 官方文档-缓存"),a("OutboundLink")],1),a("br"),t._v("\n注：关于 Webpack 的配置，校招生或客户端转前端同学，前期了解即可，后续建议深入学习。")])]),t._v(" "),a("ol",[a("li",[t._v("构建完成后静态资源上传 "),a("code",[t._v("CDN")]),t._v(" 源站")])]),t._v(" "),a("p",[t._v("上传 "),a("code",[t._v("CDN")]),t._v(" 源站往往通过 "),a("code",[t._v("CLI")]),t._v(" 调用各种客户端工具上传，此时要注意的是上传 "),a("code",[t._v("CDN")]),t._v(" 依赖配置鉴权信息（如 文件存储的 Bucket Name/accessKey、ftp的账号密码）。这些鉴权信息不能直接写代码里，否则可能会有事故风险（想想为什么）！"),a("br"),t._v("\n第 3 步改造是 "),a("code",[t._v("Nginx")]),t._v(" 层反向代理改造")]),t._v(" "),a("blockquote",[a("p",[t._v("反向代理（reverse proxy）：是指以代理服务器来接受网络请求，并将请求转发给内部的服务器，并且将内部服务器的返回，就像是二房东一样。"),a("br"),t._v("\n一句话解释反向代理 & 正向代理：反向代理隐藏了真正的服务器，正向代理隐藏了真正的客户端。"),a("br"),t._v("\n详见："),a("a",{attrs:{href:"https://juejin.cn/post/6844903782556368910",title:"https://juejin.cn/post/6844903782556368910",target:"_blank",rel:"noopener noreferrer"}},[t._v("漫话：如何给女朋友解释什么是反向代理？"),a("OutboundLink")],1)])]),t._v(" "),a("p",[a("code",[t._v("Nginx")]),t._v(" 可通过设置 "),a("code",[t._v("proxy_pass")]),t._v(" 配置代理转发，如")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    location ^~/static/ {\n        proxy_pass $cdn;\n    }\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("具体详见 "),a("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fwww.jianshu.com%2Fp%2Fb010c9302cd0",title:"https://www.jianshu.com/p/b010c9302cd0",target:"_blank",rel:"noopener noreferrer"}},[t._v("nginx 之 proxy_pass详解"),a("OutboundLink")],1)]),t._v(" "),a("blockquote",[a("p",[t._v("注：校招生或客户端转前端同学，前期了解即可，后续建议熟悉 ~ 掌握。")])]),t._v(" "),a("h2",{attrs:{id:"静态资源组织总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态资源组织总结"}},[t._v("#")]),t._v(" 静态资源组织总结")]),t._v(" "),a("p",[t._v("最后，回顾一下")]),t._v(" "),a("ol",[a("li",[t._v("为了最大程度利用缓存，将页面入口("),a("code",[t._v("HTML")]),t._v(")设置为协商缓存，将 "),a("code",[t._v("JavaScript")]),t._v("、"),a("code",[t._v("CSS")]),t._v(" 等静态资源设置为永久强缓存。")]),t._v(" "),a("li",[t._v("为了解决强缓存更新问题，将文件摘要（"),a("code",[t._v("hash")]),t._v("）作为资源路径("),a("code",[t._v("URL")]),t._v(")构成的一部分。")]),t._v(" "),a("li",[t._v("为了解决覆盖式发布引发的问题，采用 "),a("code",[t._v("name-hash")]),t._v(" 而非 "),a("code",[t._v("query-hash")]),t._v(" 的组织方式，具体需要配置 "),a("code",[t._v("Wbpack")]),t._v(" 的 "),a("code",[t._v("output.filename")]),t._v(" 为 "),a("code",[t._v("contenthash")]),t._v(" 。")]),t._v(" "),a("li",[t._v("为了解决 "),a("code",[t._v("Nginx")]),t._v(" 目录存储过大 + 结合 "),a("code",[t._v("CDN")]),t._v(" 提升访问速度，采用了 "),a("code",[t._v("Nginx 反向代理")]),t._v("+ 将静态资源上传到 "),a("code",[t._v("CDN")]),t._v("。")]),t._v(" "),a("li",[t._v("为了上传 "),a("code",[t._v("CDN")]),t._v("，我们需要按环境动态构造 "),a("code",[t._v("publicPath")]),t._v(" + 按环境构造 "),a("code",[t._v("CDN")]),t._v(" 上传目录并上传。")]),t._v(" "),a("li",[t._v("为了动态构造 "),a("code",[t._v("publicPath")]),t._v(" 并且随构建过程插入到 "),a("code",[t._v("HTML")]),t._v(" 中，采用 "),a("code",[t._v("Webpack-HTML-Plugin")]),t._v(" 等插件，将编译好的带 "),a("code",[t._v("hash")]),t._v(" + "),a("code",[t._v("publicPath")]),t._v(" 的静态资源插入到 "),a("code",[t._v("HTML")]),t._v(" 中。")]),t._v(" "),a("li",[t._v("为了保证上传 "),a("code",[t._v("CDN")]),t._v(" 的安全，我们需要一种机制管控上传 "),a("code",[t._v("CDN")]),t._v(" 秘钥，而非简单的将秘钥写到代码 / "),a("code",[t._v("Dockerfile")]),t._v(" 等明文文件中。")])]),t._v(" "),a("blockquote",[a("p",[t._v("简直是层层套娃！")])]),t._v(" "),a("p",[t._v("此时，我们已经基本获得了一套相对完备的前端静态资源组织方案。")]),t._v(" "),a("blockquote",[a("p",[t._v("此时你可能已经发现了，前端静态资源部署后，还有被 Nginx 加工消费过程，才能被用户访问到。")])]),t._v(" "),a("h1",{attrs:{id:"自动化构建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自动化构建"}},[t._v("#")]),t._v(" 自动化构建")]),t._v(" "),a("p",[t._v("现在我们已经探索出一套静态资源组织的解决方案。现在探讨一下构建的过程。我们每次构建时大约需要进行这些步骤：")]),t._v(" "),a("ul",[a("li",[t._v("拉取远程仓库")]),t._v(" "),a("li",[t._v("切换到 XX 分支")]),t._v(" "),a("li",[t._v("代码安全检查（非必选）、单元测试等等")]),t._v(" "),a("li",[t._v("安装 "),a("code",[t._v("npm/yarn")]),t._v(" 依赖\n"),a("ul",[a("li",[t._v("设置 "),a("code",[t._v("node")]),t._v(" 版本")]),t._v(" "),a("li",[t._v("设置 "),a("code",[t._v("npm/yarn")]),t._v(" 源")]),t._v(" "),a("li",[t._v("安装依赖等")])])]),t._v(" "),a("li",[t._v("执行编译 & 构建")]),t._v(" "),a("li",[t._v("产物检查（比如检测打包后 "),a("code",[t._v("JS")]),t._v(" 文件 / 图片大小、产物是否安全等，保证产物质量，非必选）")]),t._v(" "),a("li",[t._v("人工卡点（非必选，如必须 "),a("code",[t._v("Leader")]),t._v(" 审批通过才能继续）")]),t._v(" "),a("li",[t._v("打包上传 "),a("code",[t._v("CDN")])]),t._v(" "),a("li",[t._v("自动化测试（非必选，"),a("code",[t._v("e2e")]),t._v("）")]),t._v(" "),a("li",[t._v("配套剩余其他步骤")]),t._v(" "),a("li",[t._v("通知构建完成")])]),t._v(" "),a("p",[t._v("这其中，迎面而来的问题有：")]),t._v(" "),a("ul",[a("li",[t._v("在什么环境执行构建？")]),t._v(" "),a("li",[t._v("如何保证每次构建部署环境相同？")]),t._v(" "),a("li",[t._v("由谁触发构建？")]),t._v(" "),a("li",[t._v("如何管理前面所述上传 "),a("code",[t._v("CDN")]),t._v(" 等密钥（不增加成本、保证安全、保证构建上传可靠性）？")]),t._v(" "),a("li",[t._v("如何自动化触发构建 & 自动化执行上述步骤？")])]),t._v(" "),a("blockquote",[a("p",[t._v("假如每次都由人工执行，估计发版日就守着编译打包了，而且较为容易引发问题，比如某步骤遗漏或顺序错了。")])]),t._v(" "),a("ul",[a("li",[t._v("如何提升构建速率？")]),t._v(" "),a("li",[t._v("构建完成如何通知研发同学构建完成了？")])]),t._v(" "),a("blockquote",[a("p",[t._v("灵魂拷问有没有！")])]),t._v(" "),a("p",[t._v("为了解决上面问题，业界有一些解决方案：")]),t._v(" "),a("ul",[a("li",[t._v("保证环境一致性："),a("a",{attrs:{href:"https://link.juejin.cn?target=http%3A%2F%2Fwww.ruanyifeng.com%2Fblog%2F2018%2F02%2Fdocker-tutorial.html",title:"http://www.ruanyifeng.com/blog/2018/02/docker-tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("按流程构建："),a("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fcloud.tencent.com%2Fdeveloper%2Farticle%2F1504850",title:"https://cloud.tencent.com/developer/article/1504850",target:"_blank",rel:"noopener noreferrer"}},[t._v("Jenkins"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("自动化构建触发："),a("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fsegmentfault.com%2Fa%2F1190000015437514",title:"https://segmentfault.com/a/1190000015437514",target:"_blank",rel:"noopener noreferrer"}},[t._v("Gitlab webhook"),a("OutboundLink")],1),t._v(" 通知")]),t._v(" "),a("li",[t._v("开始构建通知：依赖账号体系打通+ Gitlab Webhook")]),t._v(" "),a("li",[t._v("构建完成通知：依赖账号体系打通")])]),t._v(" "),a("p",[t._v("业界的大致实现，一般都为 Jenkins + Docker + GitlabWebHook，比如下面是一些实践：")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fblog.csdn.net%2Fweixin_49592546%2Farticle%2Fdetails%2F109352249",title:"https://blog.csdn.net/weixin_49592546/article/details/109352249",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端项目自动化部署——超详细教程（Jenkins、Github Actions）"),a("OutboundLink")],1),a("br"),t._v(" "),a("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fwdfe%2Fideploy",title:"https://github.com/wdfe/ideploy",target:"_blank",rel:"noopener noreferrer"}},[t._v("iDeploy-为前端团队构建部署工程化而开发的一个持续交付平台"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("此时还有一些其他问题："),a("br"),t._v("\n比如宇宙最重物质 node_modules 安装速度过慢的问题？"),a("br"),t._v("\n如何提升 Build 构建速"),a("br"),t._v("\n上述往往在各大公司都有相对完善的构建系统 & 解决方案等，各公司各不相同但大致类似，故本文跳过该步骤。")]),t._v(" "),a("h1",{attrs:{id:"前端发布服务-预发环境、版本管理（秒级回滚）、小流量、灰度、ab测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端发布服务-预发环境、版本管理（秒级回滚）、小流量、灰度、ab测试"}},[t._v("#")]),t._v(" 前端发布服务 - 预发环境、版本管理（秒级回滚）、小流量、灰度、AB测试")]),t._v(" "),a("p",[t._v("假定我们静态资源组织完成，也搞定了自动化构建部署，也配好了 "),a("code",[t._v("Nginx")]),t._v(" 的反向代理，我们的网站终于第一次上线了。"),a("br"),t._v("\n但第二次第三次上线怎么办？直接发到生产环境做回归测试的风险极大，但又不能本地部署前端测试环境去连接后端生产库（可以想想为什么），所以我们需要一个预发（"),a("code",[t._v("Pre")]),t._v("）环境，除了非测试人员访问不到之外，其他所有环节都和生产环境保持一致！"),a("br"),t._v("\n此时遇到第一个需求，"),a("strong",[t._v("预发环境功能")]),t._v("。"),a("br"),t._v("\n假如我们某个功能是元旦零点发布，跨年时守在服务器面前点发布？万一 "),a("code",[t._v("npm")]),t._v(" 抽风拉取依赖失败导致构建失败，或者上线后发现有bug，那就只能凉凉。"),a("br"),t._v("\n或者，随着时间推移大家前端项目越积越大，"),a("code",[t._v("node_modules")]),t._v(" 质量逐渐超越银河系总质量，构建的时间往往会超过二十分钟甚至更久。某天某次我们新上线了功能后，却发现有致命阻塞性 "),a("code",[t._v("bug")]),t._v("，收款后自动退款 1.5 倍！想立即回滚版本？那就且等着，大眼瞪小眼的等它慢慢编译吧。这个时候才真的是时间就是金钱，再编译慢点公司就破产啦。"),a("br"),t._v("\n此时有没有一种办法，能在发现问题后，立即将版本回滚呢？并且这个回滚操作，回滚的同学也不应该登陆服务器去做操作（想想为什么？）。"),a("br"),t._v("\n此时遇到第二个需求，"),a("strong",[t._v("版本管理功能。")]),t._v(" 即可提前将静态资源上线，也需要保留每个历史版本，并且能实现瞬间切换版本，且切换过程不应该登陆服务器操作（想想为什么）。"),a("br"),t._v("\n其次是，假定 PM 对功能不断优化，想先灰度一部分用户，或者想做一些 AB 测试，比如给广东用户推广福建美食，给重庆用户推广钵钵鸡。"),a("br"),t._v("\n此时我们有两种方案，方案一是将把钵钵鸡和福建美食都打包到一份代码产物里，再在运行时根据地域做切换。但很快你的代码产物里就有钵钵鸡冷锅串串热锅串串老妈兔头跷脚牛肉狼牙土豆以及福建美食等等，会串味儿的对不对？况且热锅串串和冷锅串串打包混到一起我就第一个不同意，简直是对美食的亵渎！所以方案一不可取。")]),t._v(" "),a("blockquote",[a("p",[t._v("实际上，现实中往往会热锅串串冷锅串串这样完全不兼容的两份改动同时在线上运行做 AB 测试。")])]),t._v(" "),a("p",[t._v("方案二是我们将热锅串串和冷锅串串分开打包，让热锅不犯冷锅。再设计一些机制，比如携带了香蕉糖果（cookie）的同学给跷脚牛肉锅，讲港东话的同学福建美食锅，四川地域的同学随机给火锅干锅汤锅鱼火锅。岂不乐哉？"),a("br"),t._v("\n大家应该很容易发现，这种机制是极其多变的，大概率朝令夕改。难道我们每次想调整干锅、鱼火锅的比例，就要登陆服务器做调整？某天干锅卖完了但又没带电脑回家怎么办？"),a("br"),t._v("\n此时遇到第三个需求，"),a("strong",[t._v("随时调整的小流量测试、AB-Test测试、灰度上线等等功能")]),t._v("。"),a("br"),t._v("\n总结一下，为了满足复杂的线上需求，在部署层面总体来说需要："),a("strong",[t._v("预发环境、版本管理、小流量、灰度、AB测试")]),t._v("等功能。")]),t._v(" "),a("h2",{attrs:{id:"静态资源的加工"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态资源的加工"}},[t._v("#")]),t._v(" 静态资源的加工")]),t._v(" "),a("p",[t._v("如前所述，前端静态资源部署到 "),a("code",[t._v("CDN")]),t._v(" 后，有一道 "),a("code",[t._v("Nginx")]),t._v(" 反向代理做转发的加工工序。事实上，为了解决各种部署问题或为了提升性能，人们往往而需要对静态资源做更多的加工工序。"),a("br"),t._v("\n比如，部分 "),a("code",[t._v("Web")]),t._v(" 应用为了提升首屏性能，一种常见的方式为通过 "),a("code",[t._v("BFF")]),t._v(" 层或通过后端直出 "),a("code",[t._v("HTML")]),t._v("，并且在过程中注入若干信息，如 "),a("code",[t._v("userInfo")]),t._v("、用户权限信息、灰度信息等等，从而大幅降低前端登陆研发成本 & 降低首屏耗时。"),a("br"),t._v("\n下面是后端直出 "),a("code",[t._v("HTML")]),t._v(" 的一种简要流程。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b1a8e5e937754a7b93c2545dc9822f58~tplv-k3u1fbpfcp-watermark.awebp",alt:""}})]),t._v(" "),a("p",[t._v("主要流程为前端构建出的 "),a("code",[t._v("HTML")]),t._v(" 包含若干模板变量，后端收到请求后，通过各种 "),a("code",[t._v("Proxy")]),t._v(" 层将 "),a("code",[t._v("Cookie")]),t._v(" 转换成用户信息，再按依据版本配置从 "),a("code",[t._v("CDN")]),t._v(" 加载 "),a("code",[t._v("index.html")]),t._v(", 并使用模板引擎等方式将模板变量替换为用户信息，最终吐回给浏览器的则是已经包含用户信息的 "),a("code",[t._v("HTML")]),t._v(" 了！")]),t._v(" "),a("h2",{attrs:{id:"pre-环境、灰度上线的常见实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pre-环境、灰度上线的常见实现"}},[t._v("#")]),t._v(" Pre 环境、灰度上线的常见实现")]),t._v(" "),a("p",[t._v("如前所述，我们的静态资源为非覆盖式发布，多次部署后，线上存在若干版本静态资源。实现"),a("code",[t._v("Pre")]),t._v("环境/灰度上线的思路则是：通过一定的机制，让特定用户访问特定静态资源版本，从而达到访问"),a("code",[t._v("Pre")]),t._v("/灰度上线的能力。")]),t._v(" "),a("h3",{attrs:{id:"方案一-nginx-层动态转发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方案一-nginx-层动态转发"}},[t._v("#")]),t._v(" 方案一 Nginx 层动态转发")]),t._v(" "),a("p",[t._v("一种常见的 Pre 机制是静态资源部署多个版本后，开发者的通过 ModHeader 等浏览器插件，在请求中携带特定 Header（如xx-env=pre），在 Nginx 层消费该 Header 并动态转发到对应环境的静态资源上，实现访问 Pre 环境目的。此时，除静态资源为特定版本外，所有环境都是生产环境，可以将变量范围控制在最小。")]),t._v(" "),a("p",[t._v("流程大致如图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d68c978a352b442398b9f93a7c5ea9bd~tplv-k3u1fbpfcp-watermark.awebp",alt:""}})]),t._v(" "),a("blockquote",[a("p",[t._v("Nginx 可通过配置 rewrite 设置转发，如下所示。")])]),t._v(" "),a("blockquote",[a("p",[t._v("详情请查阅："),a("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fleokongwq.github.io%2F2016%2F11%2F23%2Fnginx-rewrite.html",title:"https://leokongwq.github.io/2016/11/23/nginx-rewrite.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("nginx配置rewrite指令详解"),a("OutboundLink")],1)])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    location /example {\n        rewrite ^ $cdn/$http_x_xx_env/index.html break;\n        proxy_pass $cdn/prod/index.html;\n    }\n    \n    # $http_x_xx_env 表示取自定义的 Request Header 字段 xx_env\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("blockquote",[a("p",[t._v("注：对于Nginx，校招生或客户端转前端同学，前期了解即可，后续建议熟悉 ~ 掌握。")])]),t._v(" "),a("p",[t._v("该方案优点为配置简单高效，适用于工程师。"),a("br"),t._v("\n缺点为每个用户都需要手动配置，不适用于移动端，且无法让特定用户被动精确访问某版本，比如 PM、KP 用户来配置 Header 成本过高。"),a("br"),t._v("\n同理，也可以在 Nginx 层按一些其他规则处理，实现灰度上线的能力。"),a("br"),t._v("\n如通过一定随机数 rewrite，达到小范围随机灰度。"),a("br"),t._v("\n获取 ua 并 rewrite，达到按浏览器定向灰度。"),a("br"),t._v("\n通过 Nginx GeoIP 获取地域信息，达到按地域灰度。"),a("br"),t._v("\n但上述灰度方案配置复杂，而灰度比例 / 范围往往会配置较多，每次上线都需要运维登陆生产服务器修改，较容易出各种事故。故不推荐使用，仅供拓宽思路。")]),t._v(" "),a("h3",{attrs:{id:"方案二-动态配置-服务端转发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方案二-动态配置-服务端转发"}},[t._v("#")]),t._v(" 方案二 动态配置 + 服务端转发")]),t._v(" "),a("p",[t._v("但 Pre 环境或灰度往往需要精确定位某些特定人群，如给特定PM、HR、远端报错的特定用户、KP用户 甚至给某个部门开 Pre环境等。上述同学工程背景相对缺失 / 较忙 / 通过移动端访问，此时通过修改 Header 的方式不再适用。故我们仍然要寻找某种机制，达到能方便随时调整 Pre/ 灰度范围又不用重新发版上线。既然需要按用户维度来定向，此时就依赖后端帮忙处理了。")]),t._v(" "),a("p",[t._v("而为了能随时随地调整灰度 / Pre 策略，而非依赖调整代码发版上线，此时引入配置中心的概念。")]),t._v(" "),a("blockquote",[a("p",[t._v("配置中心：一般是独立的平台 / SDK，提供动态配置管理的解决方案，提供功能有配置管理、版本管理、权限管理、灰度发布等等。后端应用通过接口消费，故配置中心和后端解耦，可以随时修改调整配置而非重新发版。 配置中心一般是配置一个 JSON 对象。 配置中心JSON对象人工维护容易引发问题，故增加机器人来降低出错几率。")])]),t._v(" "),a("p",[t._v("下图是依赖配置中心 + 服务端转发的流程图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1b36fe5f6468468e968a78db6fad315e~tplv-k3u1fbpfcp-watermark.awebp?",alt:"image.png"}})]),t._v(" "),a("p",[t._v("主要流程为：")]),t._v(" "),a("ol",[a("li",[t._v("前端攻城狮同学部署多个版本静态资源到 CDN 上（问题？如何管控多版本静态资源？）。")]),t._v(" "),a("li",[t._v("后端收到请求后，通过各种 Proxy 层将 Cookie 转换成用户信息。")]),t._v(" "),a("li",[t._v("后端读取配置中心数据，依据用户信息判断给用户访问什么环境，加载具体环境 index.html")]),t._v(" "),a("li",[t._v("后端返回给浏览器加工后的 index.html")]),t._v(" "),a("li",[t._v("若需添加具体 KP 等同学到 Pre 名单，攻城狮同学只需调用机器人/Bot 等，修改配置中心，即可生效。")])]),t._v(" "),a("blockquote",[a("p",[t._v("注意，在上述架构下，若线上某用户发生某些难以排查的问题，也可发布特定的版本，在配置中心修改后让用户访问特定版本页面，从而简化排查问题的过程。")])]),t._v(" "),a("p",[t._v("此时，一些小流量配置，AB实验，版本管理其实也可以通过该方案实施。"),a("br"),t._v("\n该方案优点：可以随时调整，不用后端发版，移动端也可生效。"),a("br"),t._v("\n该方案缺点：")]),t._v(" "),a("ol",[a("li",[t._v("和服务端强绑定（要求用户信息，在所难免）。")]),t._v(" "),a("li",[t._v("每次都需要从 "),a("code",[t._v("CDN")]),t._v(" 加载 "),a("code",[t._v("HTML")]),t._v("， 有一定性能浪费。但若缓存 "),a("code",[t._v("HTML")]),t._v("，发版环节还要通知服务端，总体增加复杂度。")]),t._v(" "),a("li",[t._v("若考虑 "),a("code",[t._v("CDN")]),t._v(" 故障，服务端做 "),a("code",[t._v("CDN")]),t._v(" 降级会增加复杂度。")]),t._v(" "),a("li",[t._v("版本管理 / 小流量等为通用需求，而该方案每个后端应用都需要开发或接入。")]),t._v(" "),a("li",[t._v("常见的配置中心又一般为 "),a("code",[t._v("JSON")]),t._v(" 配置，比较简陋，和发版的多环境无法关联，依赖人为配置，有出错的风险（如发版 "),a("code",[t._v("v1.2501")]),t._v("，配置中心手动配置时手误改成了"),a("code",[t._v("v1.2051")]),t._v("）。")])]),t._v(" "),a("h2",{attrs:{id:"前端发布服务实现与设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端发布服务实现与设计"}},[t._v("#")]),t._v(" 前端发布服务实现与设计")]),t._v(" "),a("p",[t._v("可能部分同学对线上产物实行版本管理会误理解对代码增加版本管理（如发版后手动 / 自动打Tag），后续需要时再次发版部署即可满足需求。但如前所述，通过源码做版本管理灵活性较差，无法做到一键 &秒级切换版本，不满足商业化环境多变 & 复杂的需要。"),a("br"),t._v("\n那么如何进行版本管理呢？答案是"),a("strong",[t._v("对构建产物进行深层次加工 & 管理。")]),a("br"),t._v("\n与此同时，版本管理/小流量是前端部署的常见公共业务需求，应该和业务后端服务脱离，故这里提出一个新的公共服务，纯用于前端部署相关，此处将之称为 "),a("code",[t._v("Page Server")]),t._v("，用于具体的 "),a("code",[t._v("index.html")]),t._v(" 文件管理 & 承接 "),a("code",[t._v("Nginx")]),t._v(" 流量或业务后端流量等。"),a("br"),t._v("\n同时，鉴于版本管理、小流量策略等调整会特别频繁，每次调整不应该都登录服务器，故我们需要一个新的服务 & 界面，用于操作管理版本、调整小流量等信息，并且与上述 "),a("code",[t._v("Page Server")]),t._v(" 同步，此处我们将该服务称之为 "),a("code",[t._v("Page Config Web")]),t._v("。"),a("br"),t._v("\n而我们的 "),a("code",[t._v("Page Server")]),t._v(" 则可能会有很多个实例，部署在多个集群上，以满足跨国部署、多部门项目部署等要求。所以理想情况下 "),a("code",[t._v("Page Config Web")]),t._v(" ****还要承接 "),a("code",[t._v("PageServer")]),t._v(" 的创建、管理、配置等工作。所以 "),a("code",[t._v("PageConfigWeb")]),t._v(" 与 "),a("code",[t._v("PageServer")]),t._v(" 是 1 比 N 关系（或M比N，用于跨国部署等）。"),a("br"),t._v("\n同时，我们一个前端项目可能有多套前端环境，"),a("code",[t._v("PageSever")]),t._v(" 在固定集群算公共设施，这些环境理论上都可以由一个或多个 "),a("code",[t._v("PageServer")]),t._v(" 承载。故一个 "),a("code",[t._v("PageServer")]),t._v(" 和多个前端环境是 1 比 1 或者 1 比 N 关系。"),a("br"),t._v("\n此时，对于 Nginx 来的流量，我们需要一种机制来区分该流量属于哪个环境实例，比如通过 "),a("strong",[t._v("URL")]),t._v(" 来区分，我们可以称之为 "),a("strong",[t._v("路由")]),t._v("。"),a("br"),t._v("\n最后，为了保证上述服务的正确性和自动化，构建部署（新增版本）完成后，要同步到上述两个服务，以确保版本管理的正确性。")]),t._v(" "),a("p",[t._v("最后，大致的流程图如下：")]),t._v(" "),a("blockquote",[a("p",[t._v("超大图预警")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f166c3371c854c878d2bce8c1450500e~tplv-k3u1fbpfcp-watermark.awebp",alt:""}})]),t._v(" "),a("p",[t._v("本质上来说，相当于有一个公用的中间服务，部署在多个集群上，与构建发布过程深度绑定，用于承接HTML 的流量，并通过 "),a("code",[t._v("Web")]),t._v(" 站点设置小流量规则、版本等等，来满足多变的上线需求。"),a("br"),t._v("\n其中，"),a("code",[t._v("PageServer")]),t._v(" 在承载 "),a("code",[t._v("HTML")]),t._v(" 服务时，可做一些其他工作，比如：")]),t._v(" "),a("ol",[a("li",[t._v("SSR")]),t._v(" "),a("li",[t._v("CDN 降级，用于 CDN 异常时直出 HTML 中将静态资源替换为可用的 CDN 站点。")]),t._v(" "),a("li",[t._v("404 处理")]),t._v(" "),a("li",[t._v("兜底页（比如服务出现故障，短时间内无法修复时出兜底）")]),t._v(" "),a("li",[t._v("模板渲染（如做模板替换，将 query 替换到模板中等）")]),t._v(" "),a("li",[t._v("特殊时期全局处理，如注入全局样式将页面全局置灰")])]),t._v(" "),a("p",[t._v("等等等等。")]),t._v(" "),a("blockquote",[a("p",[t._v("PageConfig Web 和 PageServer 中有构建后的所有版本信息，理论上可以缓存每个版本的 HTML文件，并且为了优化性能，PageServer 中可将最新全量版本的 HTML 文件缓存到内存中，最大程度提升响应速度，其余版本存储到 Redis 等缓存中。")])]),t._v(" "),a("p",[t._v("下面以发布一个正式版本 v.1.0.2502 并且回滚过程为例：")]),t._v(" "),a("ol",[a("li",[t._v("代码合并，触发自动化构建，构建产物以环境（env）+版本（env） + 版本（env）+版本（version） + name-hash 方式组织，并上传到 CDN。")]),t._v(" "),a("li",[t._v("构建完成后，构建脚本通知攻城狮同学、同步 PageServer、PageConfig Web 服务有新版本 v.1.0.2502 。")]),t._v(" "),a("li",[t._v("攻城狮同学收到通知后，到 PageConfig Web 站点发布新版本 v.1.0.2502 （PRE），并为该版本配置 PRE 环境小流量规则，"),a("code",[t._v("xx-env = pre")]),t._v("。此时，只有设置特定 Header 才能访问该版本。")]),t._v(" "),a("li",[t._v("若是 Nginx 直接转发，则攻城狮通过设置 Header 访问 PRE 版本。")]),t._v(" "),a("li",[t._v("若是通过服务端转发，攻城狮通过配置中心设置 PRE 白名单，即可让用户访问 PRE 版本。")]),t._v(" "),a("li",[t._v("在 PRE 版本验收完成后，攻城狮登录 PageConfig Web 站点，发布正式版本 v.1.0.2502 （不带小流量信息）。此时立即生效。")]),t._v(" "),a("li",[t._v("生效后线上回归，发现有 bug，攻城狮立马登录 PageConfig Web 站点，将版本回滚为上一版本v.1.0.2501 。此时立即生效。")])]),t._v(" "),a("h1",{attrs:{id:"关于部署的总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于部署的总结"}},[t._v("#")]),t._v(" 关于部署的总结")]),t._v(" "),a("h2",{attrs:{id:"静态资源组织部分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态资源组织部分"}},[t._v("#")]),t._v(" 静态资源组织部分")]),t._v(" "),a("ol",[a("li",[t._v("为了最大程度利用缓存，将页面(HTML)设置为协商缓存，将 JavaScript、CSS 等设置为永久强缓存。")]),t._v(" "),a("li",[t._v("为了解决强缓存更新问题，将文件摘要（hash）作为资源路径(URL)构成的一部分。")]),t._v(" "),a("li",[t._v("为了解决覆盖式发布引发的问题，采用 name-hash 而非 query-hash 的组织方式，具体需要配置 webpack 的 output.filename 为 contenthash 方式。")]),t._v(" "),a("li",[t._v("为了解决 Nginx 目录存储过大 + 结合 CDN 提升访问速度，采用了 Nginx 反向代理+ 将静态资源上传到 CDN。")]),t._v(" "),a("li",[t._v("为了上传 CDN，我们需要按环境动态构造 publicPath + 按环境构造 CDN 上传目录并上传。")]),t._v(" "),a("li",[t._v("为了动态构造 publicPath 并且随构建过程插入到 HTML 中，采用 Webpack-HTML-Plugin 等插件，将编译好的带 hash + publicPath 的静态资源插入到 HTML 中。")]),t._v(" "),a("li",[t._v("为了保证上传 CDN 的安全，我们需要一种机制管控上传 CDN 秘钥，而非简单的将秘钥写到代码 / Dockerfile 等明文文件中。")])]),t._v(" "),a("h2",{attrs:{id:"自动化部署部分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自动化部署部分"}},[t._v("#")]),t._v(" 自动化部署部分")]),t._v(" "),a("p",[t._v("为了提升部署效率，100% 避免因部署出错，需要设计 & 搭建自动化部署平台，以 Docker 等保证环境的一致性，以 Jenkins 等保证构建流程的串联。使用es-build等提升构建效率。")]),t._v(" "),a("h2",{attrs:{id:"前端部署-静态资源加工"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端部署-静态资源加工"}},[t._v("#")]),t._v(" 前端部署 & 静态资源加工")]),t._v(" "),a("p",[t._v("关于前端部署，能总结出下面几个原则/要求：")]),t._v(" "),a("ol",[a("li",[t._v("构建发布后，不应该被覆盖。")]),t._v(" "),a("li",[t._v("构建发布后，静态资源应当永久保存在服务器/CDN 上，即只可读。")]),t._v(" "),a("li",[t._v("静态资源组织上，每个版本应该按文件夹存储，做到资源收敛。这样假如真要删除时，可按版本删除。（如某个版本代码泄密）")])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// webpack.config.js")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CDN_HOST")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CDN_HOST")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// CDN 域名")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CDN_PATH")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CDN_PATH")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// CDN 路径")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ENV")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ENV")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当前的环境等等")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VERSION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VERSION")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当前发布的版本")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getPublicPath")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Some code here")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CDN_HOST")]),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CDN_PATH")]),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ENV")]),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VERSION")]),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 依据 ENV 等动态构造 publicPath")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        output"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            filename"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bundle.[name][contenthash].js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            publicPath"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPublicPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        plugins"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HtmlWebpackPlugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br")])]),a("blockquote",[a("p",[t._v("故 publicPath 应增加 version 字段")])]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("发布过程应该自动化，开发人员不应该直接接触服务器。")]),t._v(" "),a("li",[t._v("版本切换时，也应当不接触服务器。")]),t._v(" "),a("li",[t._v("版本切换能秒级生效。（如 v0.2 切换 v0.3，立即生效）。")]),t._v(" "),a("li",[t._v("线上需要能同时生效多个版本，满足 AB 测试、灰度、PRE 环境等小流量需求。")])]),t._v(" "),a("p",[t._v("上述需求都相对复杂多变，为了应对复杂的线上需求，可以对静态资源做深度加工，如通过服务端直出 HTML、通过配置中心实现按用户 PRE 等等。")]),t._v(" "),a("h2",{attrs:{id:"前端发布服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端发布服务"}},[t._v("#")]),t._v(" 前端发布服务")]),t._v(" "),a("p",[t._v("面对复杂的商业化需求，方便多前端业务实现版本管理、灰度、PRE、AB 测试等小流量功能，我们设计了一个中间服务 PageConfig Web & PageServer，与 Nginx 和各种后端相结合，达到配置即时生效的能力。")]),t._v(" "),a("h1",{attrs:{id:"灵魂拷问的部分答案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#灵魂拷问的部分答案"}},[t._v("#")]),t._v(" 灵魂拷问的部分答案")]),t._v(" "),a("p",[t._v("Q: 前端代码从 tsx/jsx 到部署上线被用户访问，中间大致会经历哪些过程？"),a("br"),t._v("\nA: \b经历本地开发、远程构建打包部署、安全检查、上传CDN、Nginx做流量转发、对静态资源做若干加工处理等过程。"),a("br"),t._v("\nQ：可能大部分同学都知道强缓存/协商缓存，那前端各种产物（HTML、JS、CSS、IMAGES 等）应该用什么缓存策略？以及为什么？")]),t._v(" "),a("ul",[a("li",[t._v("若使用协商缓存，但静态资源却不频繁更新，如何避免协商过程的请求浪费？")]),t._v(" "),a("li",[t._v("若使用强缓存，那静态资源如何更新？")])]),t._v(" "),a("p",[t._v("A：HTML使用协商缓存，静态资源使用强缓存，使用name-hash（非覆盖式发布）解决静态资源更新问题。"),a("br"),t._v("\nQ：配套的，前端静态资源应该如何组织？"),a("br"),t._v("\nA：搭配 Webpack 的Webpack_HTML-Plugin & 配置 output publicPath等。"),a("br"),t._v("\nQ：配套的，自动化构建 & 部署过程如何与 CDN 结合？"),a("br"),t._v("\nA：自动化构建打包后，将产物传输到对应环境 URL 的CDN上。"),a("br"),t._v("\nQ：如何避免前端上线，影响未刷新页面的用户？"),a("br"),t._v("\nA：使用name-hash方式组织静态资源，先上线静态资源，再上线HTML。"),a("br"),t._v("\nQ：刚上线的版本发现有阻塞性 bug，如何做到秒级回滚，而非再次部署等 20 分钟甚至更久？"),a("br"),t._v("\nA：HTML文件使用非覆盖方式存储在CDN上，搭建前端发布服务，对 HTML 按版本等做缓存加工处理。当需要回滚时，更改发布服务HTMl指向即可。"),a("br"),t._v("\nQ: CDN 域名突然挂了，如何实现秒级 CDN 降级修补而非再次全部业务重新部署一次？"),a("br"),t._v("\nA1: 将静态资源传输到多个 CDN 上，并开发一个加载Script的SDK集成到HTML中。当发现CDN资源加载失败时，逐步降级CDN域名。"),a("br"),t._v("\nA2：在前端发布服务中，增加HTML文本处理环节，如增加CDN域名替换，发生异常时，在发布服务中一键设置即可。"),a("br"),t._v("\nQ：如何实现一个预发环境，除了前端资源外都是线上环境，将变量控制前端环境内？"),a("br"),t._v("\nA：对静态资源做加工，对HTML入口做小流量。"),a("br"),t._v("\nQ：部署环节如何方便配套做 AB 测试等？"),a("br"),t._v("\nA：参见前端发布服务"),a("br"),t._v("\nQ：如何实现一套前端代码，发布成多套环境产物？"),a("br"),t._v("\nA：使用环境变量，将当前环境、CDN、CDN_HOST、Version等注入环境变量中，构建时消费 & 将产物上传不同的CDN即可。")]),t._v(" "),a("h1",{attrs:{id:"其他"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),a("p",[t._v("如果想深入学习前端部署，下面是一些学习建议。")]),t._v(" "),a("ol",[a("li",[t._v("学习负载均衡（要求：了解）。"),a("br"),t._v("\n学习和了解负载均衡的原理、都有哪些配置玩法。如参考"),a("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fwww.jianshu.com%2Fp%2F215b5575107c",title:"https://www.jianshu.com/p/215b5575107c",target:"_blank",rel:"noopener noreferrer"}},[t._v("大型网站架构系列：负载均衡详解"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("深入学习 HTTP（要求：熟练掌握）"),a("br"),t._v("\n如掌握常见的状态码、常见的 Header 及其深度应用、强缓存/协商缓存、HTTP2 的新增功能等等。尤其HTTP 1.1 和 HTTP 2.0。 推荐书籍："),a("br"),t._v(" "),a("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fbook.douban.com%2Fsubject%2F25863515%2F",title:"https://book.douban.com/subject/25863515/",target:"_blank",rel:"noopener noreferrer"}},[t._v("图解HTTP"),a("OutboundLink")],1),a("br"),t._v(" "),a("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fbook.douban.com%2Fsubject%2F10746113%2F",title:"https://book.douban.com/subject/10746113/",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP 权威指南"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("深入学习前端工程化 （要求：精通）"),a("br"),t._v("\na. 了解前端工程化可以做什么，如 "),a("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fbook.douban.com%2Fsubject%2F27605366%2F",title:"https://book.douban.com/subject/27605366/",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端工程化：体系设计与实践"),a("OutboundLink")],1),a("br"),t._v("\nb. 掌握前端工程师的常见实践原理 & 实操"),a("br"),t._v("\nc. 深度学习 Webpack "),a("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fwebpack.docschina.org%2Fguides%2F",title:"https://webpack.docschina.org/guides/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Webpack 官方文档"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("学习各种对前端静态资源加工的各种方案（要求：掌握）")]),t._v(" "),a("li",[t._v("深度学习浏览器原理 （要求：精通）"),a("br"),t._v("\n一些资料： "),a("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fsegmentfault.com%2Fa%2F1190000012925872",title:"https://segmentfault.com/a/1190000012925872",target:"_blank",rel:"noopener noreferrer"}},[t._v("从浏览器多进程到JS单线程，JS运行机制最全面的一次梳理"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=n.exports}}]);